" Plugins
" .vim
" ├── pack
" │   ├── dist
" │   │   └── start
" │   │       ├── fzf.vim
" │   │       ├── nerdtree
" │   │       ├── vim-airline
" │   │       └── vim-devicons
" │   └── themes
" │       └── opt
" │           └── solarized8
"

" Basics
set nocompatible
filetype plugin on

" Syntax 
syntax on

" Set Colors
set background=dark
colorscheme solarized8_high

" No Backup or Swapfile
set nobackup
set noswapfile

" No Line Wrap
set nowrap

" Set F2 for paste toggle
set pastetoggle=<F2>

" show the cursorline
set cursorline

" UTF-8 Encoding for all files
set encoding=utf-8

" Line Numbers + relative
set number
set relativenumber

" Disable mouse 
set mouse-=a

" Disable SpellChecking
set nospell

" Enable System Clipboard
set clipboard=unnamedplus

" Splits open at the bottom and right, which is non-retarded, unlike vim defaults.
set splitbelow
set splitright

" Enable advanced Autocompletion 
set wildmode=longest,list,full
set wildmenu

" Show matched brackets
set showmatch

" Ignore case on searches
set ignorecase

" Highlight Search
set hlsearch

" Search while typing
set incsearch

"https://github.com/junegunn/fzf.vim.git Activate Modeline
set modeline
set modelines=5

" ============== KEYBINDINGS ==============
" define the Leader key
let mapleader = "-"

" fzf magic
nnoremap <silent> , :Files<cr>

" create new tab || t
nnoremap 	<C-t> 		:tabnew<CR>
"gt next tab
"gT prev tab
"C+W+W move between openwindows

" Use CTRL-S for saving, also in Insert mode
noremap 	<C-S>   :update<CR>
vnoremap	<C-S>  	<C-C>:update<CR>
inoremap 	<C-S>	<C-O>:update<CR><ESC>

noremap 	<C-Q>   :quit!<CR>
vnoremap 	<C-Q>  	<C-C>:quit!<CR>
inoremap 	<C-Q>  	<C-O>:quit!<CR>

" Toggle line numbers
function! NumberToggle()
    if &relativenumber
           set norelativenumber
      else
           set relativenumber
      endif
endfunction
nnoremap 	<F3> 	:call NumberToggle()<CR>

map <C-n> :NERDTreeToggle<CR>

" ============== FILETYPE ==============
" Interpret .md files, etc. as .markdown
let g:vimwiki_ext2syntax = {'.Rmd': 'markdown', '.rmd': 'markdown','.md':'markdown', '.markdown': 'markdown', '.mdown': 'markdown'}


" ============== CUSTOM ==============
augroup resCur
  autocmd!
  autocmd BufReadPost * call setpos(".", getpos("'\""))
augroup END


" Set nice tabline
let g:airline#extensions#tabline#enabled = 1

" Set the airline theme
let g:airline_theme='wombat'

" Enable PowerLine Font Symbols
let g:airline_powerline_fonts = 1

let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'enter':  'tab split',
  \ 'ctrl-v': 'vsplit' }
